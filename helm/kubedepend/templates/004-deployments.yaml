apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-proxy-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-proxy-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-proxy-app
    spec:
      containers:
      - name: kubedepend-proxy
        image: morova/kubedepend-proxy:1.0
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
          name: proxy-port
        volumeMounts:
          - name: proxy-config-volume
            mountPath: /etc/nginx
              
      volumes:
          - name: proxy-config-volume
            configMap:
              name: proxy-config


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-backend-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-backend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-backend-app
    spec:
      containers:
      - name: kubedepend-backend
        image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
        imagePullPolicy: Always
        envFrom:
            - configMapRef:
                  name: backend-config
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1000m"
          limits:
            memory: "2048Mi"
            cpu: "2000m"
        ports:
        - containerPort: 8000
          name: backend-port

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-frontend-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-frontend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-frontend-app
    spec:
      containers:
      - name: kubedepend-frontend
        image: morova/kubedepend-frontend:1.0
        imagePullPolicy: Always
        envFrom:
            - configMapRef:
                  name: frontend-config
        stdin: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        ports:
        - containerPort: 3000
          name: frontend-port


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-worker-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-worker-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-worker-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "5000"
    spec:
      containers:
      - name: kubedepend-worker
        image: {{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: worker-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "400m"
          limits:
            memory: "1024Mi"
            cpu: "1500m"
        ports:
        - containerPort: 5000
          name: worker-port

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-db-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-db-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-db-app
    spec:
      containers:
      - name: kubedepend-db
        image: mysql:8
        imagePullPolicy: "IfNotPresent"
        envFrom:
            - configMapRef:
                  name: mysql-config
        resources:
          requests:
            memory: "512"
            cpu: "200m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        ports:
        - containerPort: 3306
          name: db-port

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kubedepend-adminer-depl
#   namespace: kubedepend
# spec:
#   selector:
#     matchLabels:
#       app: kubedepend-adminer-app
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: kubedepend-adminer-app
#     spec:
#       containers:
#       - name: kubedepend-adminer
#         image: adminer:4.7.7
#         imagePullPolicy: "IfNotPresent"
#         # resources:
#         #   limits:
#         #     memory: "128Mi"
#         #     cpu: "100m"
#         ports:
#         - containerPort: 8080
#           name: adminer-port


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedepend-activemq-depl
  namespace: kubedepend
spec:
  selector:
    matchLabels:
      app: kubedepend-activemq-app
  replicas: 1
  template:
    metadata:
      labels:
        app: kubedepend-activemq-app
    spec:
      containers:
      - name: kubedepend-activemq
        image: bwolf/activemq-prometheus
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        ports:
        - containerPort: 61616
          name: amq-broker
        - containerPort: 8161
          name: amq-webconsole
        - containerPort: 8080
          name: amq-metrics

---

