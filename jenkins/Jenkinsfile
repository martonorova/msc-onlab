import groovy.json.JsonSlurper

def awsCliImage = "amazon/aws-cli"
def awsCFBaseCommand = "${awsCliImage} cloudformation"
def cloudformationStackArn = ""
def cfStackStatusFilters = [
    "CREATE_IN_PROGRESS",
    "CREATE_FAILED",
    "CREATE_COMPLETE",
    "ROLLBACK_IN_PROGRESS",
    "ROLLBACK_FAILED",
    "ROLLBACK_COMPLETE",
    "DELETE_IN_PROGRESS"
]

pipeline { 
    agent any

    parameters {
        string(name: 'CFStackName', defaultValue: 'morova-eks-cluster', description: 'The name of the AWS CF stack to use / create')
        string(name: 'AWSRegion', defaultValue: 'us-east-2', description: 'The AWS region to use')
    }

    options {
        skipStagesAfterUnstable()
        skipDefaultCheckout()
        timeout(time: 15, unit: 'MINUTES')
        timestamps()
    }



    // environment {
    //     // AWS_REGION="us-east-2"
    // }

    stages {
        stage('Prepare build') {
            steps {
                checkout scm
                // sh "source /var/jenkins_home/.bashrc"
            }
        }

        stage('INFR - check') {
            steps {
                echo "Setup AWS CLI"
                withCredentials(
                    [
                        usernamePassword(
                            credentialsId: 'aws-key',
                            usernameVariable: 'AWS_ACCESS_KEY_ID',
                            passwordVariable: 'AWS_SECRET_ACCESS_KEY'
                        ),
                        string(
                            credentialsId: 'aws-session-token',
                            variable: 'AWS_SESSION_TOKEN'
                        )
                    ]
                ) {
                    script {
                        echo "Check if '$CFStackName' CloudFormation stack exists"
                        def stacksResult = sh(
                            script: "/usr/bin/docker run \
                                --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
                                --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
                                --env AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
                                ${awsCFBaseCommand} list-stacks --region $AWSRegion --stack-status-filter ${cfStackStatusFilters.join(' ')} | jq -r '.StackSummaries | map(select(.StackName == \"morova-eks-cluster\"))'",
                            returnStdout: true
                        ).trim()
                        def jsonSlurper = new JsonSlurper()
                        def stacksResultParsed = jsonSlurper.parseText(stacksResult)
                        echo stacksResultParsed


                        // echo "cfStackExists = ${cfStackExists}"

                        // if (!cfStackExists) {
                        //     echo "Creating CloudFormation stack"
                        // }
                    }
                }
                
            }
        }

        stage('Deployment') {
            steps {
                echo "Deployment"
            }
        }

        stage('Running tests') {
            steps {
                echo "Running tests"
            }
        }

        stage('Clean up') {
            steps {
                echo "Clean up"
            }
        }
    }
}